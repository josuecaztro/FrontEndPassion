{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isWeekend = exports.isCurrentDayOfWeek = exports.getDecadeLabel = exports.getCenturyLabel = exports.getValueRange = exports.getRange = exports.getEndPrevious2 = exports.getEndPrevious = exports.getEnd = exports.getBeginNext2 = exports.getBeginPrevious2 = exports.getBeginNext = exports.getBeginPrevious = exports.getBegin = exports.getWeekNumber = exports.getBeginOfWeek = exports.getBeginOfDecadeYear = exports.getBeginOfCenturyYear = exports.getDayOfWeek = void 0;\nvar date_utils_1 = require(\"@wojtekmaj/date-utils\");\nvar const_js_1 = require(\"./const.js\");\nvar dateFormatter_js_1 = require(\"./dateFormatter.js\");\nvar SUNDAY = const_js_1.WEEKDAYS[0];\nvar FRIDAY = const_js_1.WEEKDAYS[5];\nvar SATURDAY = const_js_1.WEEKDAYS[6];\n/* Simple getters - getting a property of a given point in time */\n/**\n * Gets day of the week of a given date.\n * @param {Date} date Date.\n * @param {CalendarType} [calendarType=\"iso8601\"] Calendar type.\n * @returns {number} Day of the week.\n */\nfunction getDayOfWeek(date, calendarType) {\n  if (calendarType === void 0) {\n    calendarType = const_js_1.CALENDAR_TYPES.ISO_8601;\n  }\n  var weekday = date.getDay();\n  switch (calendarType) {\n    case const_js_1.CALENDAR_TYPES.ISO_8601:\n      // Shifts days of the week so that Monday is 0, Sunday is 6\n      return (weekday + 6) % 7;\n    case const_js_1.CALENDAR_TYPES.ISLAMIC:\n      return (weekday + 1) % 7;\n    case const_js_1.CALENDAR_TYPES.HEBREW:\n    case const_js_1.CALENDAR_TYPES.GREGORY:\n      return weekday;\n    default:\n      throw new Error('Unsupported calendar type.');\n  }\n}\nexports.getDayOfWeek = getDayOfWeek;\n/**\n * Century\n */\n/**\n * Gets the year of the beginning of a century of a given date.\n * @param {Date} date Date.\n * @returns {number} Year of the beginning of a century.\n */\nfunction getBeginOfCenturyYear(date) {\n  var beginOfCentury = (0, date_utils_1.getCenturyStart)(date);\n  return (0, date_utils_1.getYear)(beginOfCentury);\n}\nexports.getBeginOfCenturyYear = getBeginOfCenturyYear;\n/**\n * Decade\n */\n/**\n * Gets the year of the beginning of a decade of a given date.\n * @param {Date} date Date.\n * @returns {number} Year of the beginning of a decade.\n */\nfunction getBeginOfDecadeYear(date) {\n  var beginOfDecade = (0, date_utils_1.getDecadeStart)(date);\n  return (0, date_utils_1.getYear)(beginOfDecade);\n}\nexports.getBeginOfDecadeYear = getBeginOfDecadeYear;\n/**\n * Week\n */\n/**\n * Returns the beginning of a given week.\n *\n * @param {Date} date Date.\n * @param {CalendarType} [calendarType=\"iso8601\"] Calendar type.\n * @returns {Date} Beginning of a given week.\n */\nfunction getBeginOfWeek(date, calendarType) {\n  if (calendarType === void 0) {\n    calendarType = const_js_1.CALENDAR_TYPES.ISO_8601;\n  }\n  var year = (0, date_utils_1.getYear)(date);\n  var monthIndex = (0, date_utils_1.getMonth)(date);\n  var day = date.getDate() - getDayOfWeek(date, calendarType);\n  return new Date(year, monthIndex, day);\n}\nexports.getBeginOfWeek = getBeginOfWeek;\n/**\n * Gets week number according to ISO 8601 or US standard.\n * In ISO 8601, Arabic and Hebrew week 1 is the one with January 4.\n * In US calendar week 1 is the one with January 1.\n *\n * @param {Date} date Date.\n * @param {CalendarType} [calendarType=\"iso8601\"] Calendar type.\n * @returns {number} Week number.\n */\nfunction getWeekNumber(date, calendarType) {\n  if (calendarType === void 0) {\n    calendarType = const_js_1.CALENDAR_TYPES.ISO_8601;\n  }\n  var calendarTypeForWeekNumber = calendarType === const_js_1.CALENDAR_TYPES.GREGORY ? const_js_1.CALENDAR_TYPES.GREGORY : const_js_1.CALENDAR_TYPES.ISO_8601;\n  var beginOfWeek = getBeginOfWeek(date, calendarType);\n  var year = (0, date_utils_1.getYear)(date) + 1;\n  var dayInWeekOne;\n  var beginOfFirstWeek;\n  // Look for the first week one that does not come after a given date\n  do {\n    dayInWeekOne = new Date(year, 0, calendarTypeForWeekNumber === const_js_1.CALENDAR_TYPES.ISO_8601 ? 4 : 1);\n    beginOfFirstWeek = getBeginOfWeek(dayInWeekOne, calendarType);\n    year -= 1;\n  } while (date < beginOfFirstWeek);\n  return Math.round((beginOfWeek.getTime() - beginOfFirstWeek.getTime()) / (8.64e7 * 7)) + 1;\n}\nexports.getWeekNumber = getWeekNumber;\n/**\n * Others\n */\n/**\n * Returns the beginning of a given range.\n *\n * @param {RangeType} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n * @returns {Date} Beginning of a given range.\n */\nfunction getBegin(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, date_utils_1.getCenturyStart)(date);\n    case 'decade':\n      return (0, date_utils_1.getDecadeStart)(date);\n    case 'year':\n      return (0, date_utils_1.getYearStart)(date);\n    case 'month':\n      return (0, date_utils_1.getMonthStart)(date);\n    case 'day':\n      return (0, date_utils_1.getDayStart)(date);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\nexports.getBegin = getBegin;\n/**\n * Returns the beginning of a previous given range.\n *\n * @param {RangeType} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n * @returns {Date} Beginning of a previous given range.\n */\nfunction getBeginPrevious(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, date_utils_1.getPreviousCenturyStart)(date);\n    case 'decade':\n      return (0, date_utils_1.getPreviousDecadeStart)(date);\n    case 'year':\n      return (0, date_utils_1.getPreviousYearStart)(date);\n    case 'month':\n      return (0, date_utils_1.getPreviousMonthStart)(date);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\nexports.getBeginPrevious = getBeginPrevious;\n/**\n * Returns the beginning of a next given range.\n *\n * @param {RangeType} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n * @returns {Date} Beginning of a next given range.\n */\nfunction getBeginNext(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, date_utils_1.getNextCenturyStart)(date);\n    case 'decade':\n      return (0, date_utils_1.getNextDecadeStart)(date);\n    case 'year':\n      return (0, date_utils_1.getNextYearStart)(date);\n    case 'month':\n      return (0, date_utils_1.getNextMonthStart)(date);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\nexports.getBeginNext = getBeginNext;\nfunction getBeginPrevious2(rangeType, date) {\n  switch (rangeType) {\n    case 'decade':\n      return (0, date_utils_1.getPreviousDecadeStart)(date, -100);\n    case 'year':\n      return (0, date_utils_1.getPreviousYearStart)(date, -10);\n    case 'month':\n      return (0, date_utils_1.getPreviousMonthStart)(date, -12);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\nexports.getBeginPrevious2 = getBeginPrevious2;\nfunction getBeginNext2(rangeType, date) {\n  switch (rangeType) {\n    case 'decade':\n      return (0, date_utils_1.getNextDecadeStart)(date, 100);\n    case 'year':\n      return (0, date_utils_1.getNextYearStart)(date, 10);\n    case 'month':\n      return (0, date_utils_1.getNextMonthStart)(date, 12);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\nexports.getBeginNext2 = getBeginNext2;\n/**\n * Returns the end of a given range.\n *\n * @param {RangeType} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n * @returns {Date} End of a given range.\n */\nfunction getEnd(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, date_utils_1.getCenturyEnd)(date);\n    case 'decade':\n      return (0, date_utils_1.getDecadeEnd)(date);\n    case 'year':\n      return (0, date_utils_1.getYearEnd)(date);\n    case 'month':\n      return (0, date_utils_1.getMonthEnd)(date);\n    case 'day':\n      return (0, date_utils_1.getDayEnd)(date);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\nexports.getEnd = getEnd;\n/**\n * Returns the end of a previous given range.\n *\n * @param {RangeType} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n * @returns {Date} End of a previous given range.\n */\nfunction getEndPrevious(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, date_utils_1.getPreviousCenturyEnd)(date);\n    case 'decade':\n      return (0, date_utils_1.getPreviousDecadeEnd)(date);\n    case 'year':\n      return (0, date_utils_1.getPreviousYearEnd)(date);\n    case 'month':\n      return (0, date_utils_1.getPreviousMonthEnd)(date);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\nexports.getEndPrevious = getEndPrevious;\nfunction getEndPrevious2(rangeType, date) {\n  switch (rangeType) {\n    case 'decade':\n      return (0, date_utils_1.getPreviousDecadeEnd)(date, -100);\n    case 'year':\n      return (0, date_utils_1.getPreviousYearEnd)(date, -10);\n    case 'month':\n      return (0, date_utils_1.getPreviousMonthEnd)(date, -12);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\nexports.getEndPrevious2 = getEndPrevious2;\n/**\n * Returns an array with the beginning and the end of a given range.\n *\n * @param {RangeType} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n * @returns {Date[]} Beginning and end of a given range.\n */\nfunction getRange(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, date_utils_1.getCenturyRange)(date);\n    case 'decade':\n      return (0, date_utils_1.getDecadeRange)(date);\n    case 'year':\n      return (0, date_utils_1.getYearRange)(date);\n    case 'month':\n      return (0, date_utils_1.getMonthRange)(date);\n    case 'day':\n      return (0, date_utils_1.getDayRange)(date);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\nexports.getRange = getRange;\n/**\n * Creates a range out of two values, ensuring they are in order and covering entire period ranges.\n *\n * @param {RangeType} rangeType Range type (e.g. 'day')\n * @param {Date} date1 First date.\n * @param {Date} date2 Second date.\n * @returns {Date[]} Beginning and end of a given range.\n */\nfunction getValueRange(rangeType, date1, date2) {\n  var rawNextValue = [date1, date2].sort(function (a, b) {\n    return a.getTime() - b.getTime();\n  });\n  return [getBegin(rangeType, rawNextValue[0]), getEnd(rangeType, rawNextValue[1])];\n}\nexports.getValueRange = getValueRange;\nfunction toYearLabel(locale, formatYear, dates) {\n  if (formatYear === void 0) {\n    formatYear = dateFormatter_js_1.formatYear;\n  }\n  return dates.map(function (date) {\n    return formatYear(locale, date);\n  }).join(' – ');\n}\n/**\n * @callback FormatYear\n * @param {string} locale Locale.\n * @param {Date} date Date.\n * @returns {string} Formatted year.\n */\n/**\n * Returns a string labelling a century of a given date.\n * For example, for 2017 it will return 2001-2100.\n *\n * @param {string} locale Locale.\n * @param {FormatYear} formatYear Function to format a year.\n * @param {Date|string|number} date Date or a year as a string or as a number.\n * @returns {string} String labelling a century of a given date.\n */\nfunction getCenturyLabel(locale, formatYear, date) {\n  return toYearLabel(locale, formatYear, (0, date_utils_1.getCenturyRange)(date));\n}\nexports.getCenturyLabel = getCenturyLabel;\n/**\n * Returns a string labelling a decade of a given date.\n * For example, for 2017 it will return 2011-2020.\n *\n * @param {string} locale Locale.\n * @param {FormatYear} formatYear Function to format a year.\n * @param {Date|string|number} date Date or a year as a string or as a number.\n * @returns {string} String labelling a decade of a given date.\n */\nfunction getDecadeLabel(locale, formatYear, date) {\n  return toYearLabel(locale, formatYear, (0, date_utils_1.getDecadeRange)(date));\n}\nexports.getDecadeLabel = getDecadeLabel;\n/**\n * Returns a boolean determining whether a given date is the current day of the week.\n *\n * @param {Date} date Date.\n * @returns {boolean} Whether a given date is the current day of the week.\n */\nfunction isCurrentDayOfWeek(date) {\n  return date.getDay() === new Date().getDay();\n}\nexports.isCurrentDayOfWeek = isCurrentDayOfWeek;\n/**\n * Returns a boolean determining whether a given date is a weekend day.\n *\n * @param {Date} date Date.\n * @param {CalendarType} [calendarType=\"iso8601\"] Calendar type.\n * @returns {boolean} Whether a given date is a weekend day.\n */\nfunction isWeekend(date, calendarType) {\n  if (calendarType === void 0) {\n    calendarType = const_js_1.CALENDAR_TYPES.ISO_8601;\n  }\n  var weekday = date.getDay();\n  switch (calendarType) {\n    case const_js_1.CALENDAR_TYPES.ISLAMIC:\n    case const_js_1.CALENDAR_TYPES.HEBREW:\n      return weekday === FRIDAY || weekday === SATURDAY;\n    case const_js_1.CALENDAR_TYPES.ISO_8601:\n    case const_js_1.CALENDAR_TYPES.GREGORY:\n      return weekday === SATURDAY || weekday === SUNDAY;\n    default:\n      throw new Error('Unsupported calendar type.');\n  }\n}\nexports.isWeekend = isWeekend;","map":{"version":3,"names":["Object","defineProperty","exports","value","isWeekend","isCurrentDayOfWeek","getDecadeLabel","getCenturyLabel","getValueRange","getRange","getEndPrevious2","getEndPrevious","getEnd","getBeginNext2","getBeginPrevious2","getBeginNext","getBeginPrevious","getBegin","getWeekNumber","getBeginOfWeek","getBeginOfDecadeYear","getBeginOfCenturyYear","getDayOfWeek","date_utils_1","require","const_js_1","dateFormatter_js_1","SUNDAY","WEEKDAYS","FRIDAY","SATURDAY","date","calendarType","CALENDAR_TYPES","ISO_8601","weekday","getDay","ISLAMIC","HEBREW","GREGORY","Error","beginOfCentury","getCenturyStart","getYear","beginOfDecade","getDecadeStart","year","monthIndex","getMonth","day","getDate","Date","calendarTypeForWeekNumber","beginOfWeek","dayInWeekOne","beginOfFirstWeek","Math","round","getTime","rangeType","getYearStart","getMonthStart","getDayStart","concat","getPreviousCenturyStart","getPreviousDecadeStart","getPreviousYearStart","getPreviousMonthStart","getNextCenturyStart","getNextDecadeStart","getNextYearStart","getNextMonthStart","getCenturyEnd","getDecadeEnd","getYearEnd","getMonthEnd","getDayEnd","getPreviousCenturyEnd","getPreviousDecadeEnd","getPreviousYearEnd","getPreviousMonthEnd","getCenturyRange","getDecadeRange","getYearRange","getMonthRange","getDayRange","date1","date2","rawNextValue","sort","a","b","toYearLabel","locale","formatYear","dates","map","join"],"sources":["/Users/josue/node_modules/react-calendar/dist/cjs/shared/dates.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isWeekend = exports.isCurrentDayOfWeek = exports.getDecadeLabel = exports.getCenturyLabel = exports.getValueRange = exports.getRange = exports.getEndPrevious2 = exports.getEndPrevious = exports.getEnd = exports.getBeginNext2 = exports.getBeginPrevious2 = exports.getBeginNext = exports.getBeginPrevious = exports.getBegin = exports.getWeekNumber = exports.getBeginOfWeek = exports.getBeginOfDecadeYear = exports.getBeginOfCenturyYear = exports.getDayOfWeek = void 0;\nvar date_utils_1 = require(\"@wojtekmaj/date-utils\");\nvar const_js_1 = require(\"./const.js\");\nvar dateFormatter_js_1 = require(\"./dateFormatter.js\");\nvar SUNDAY = const_js_1.WEEKDAYS[0];\nvar FRIDAY = const_js_1.WEEKDAYS[5];\nvar SATURDAY = const_js_1.WEEKDAYS[6];\n/* Simple getters - getting a property of a given point in time */\n/**\n * Gets day of the week of a given date.\n * @param {Date} date Date.\n * @param {CalendarType} [calendarType=\"iso8601\"] Calendar type.\n * @returns {number} Day of the week.\n */\nfunction getDayOfWeek(date, calendarType) {\n    if (calendarType === void 0) { calendarType = const_js_1.CALENDAR_TYPES.ISO_8601; }\n    var weekday = date.getDay();\n    switch (calendarType) {\n        case const_js_1.CALENDAR_TYPES.ISO_8601:\n            // Shifts days of the week so that Monday is 0, Sunday is 6\n            return (weekday + 6) % 7;\n        case const_js_1.CALENDAR_TYPES.ISLAMIC:\n            return (weekday + 1) % 7;\n        case const_js_1.CALENDAR_TYPES.HEBREW:\n        case const_js_1.CALENDAR_TYPES.GREGORY:\n            return weekday;\n        default:\n            throw new Error('Unsupported calendar type.');\n    }\n}\nexports.getDayOfWeek = getDayOfWeek;\n/**\n * Century\n */\n/**\n * Gets the year of the beginning of a century of a given date.\n * @param {Date} date Date.\n * @returns {number} Year of the beginning of a century.\n */\nfunction getBeginOfCenturyYear(date) {\n    var beginOfCentury = (0, date_utils_1.getCenturyStart)(date);\n    return (0, date_utils_1.getYear)(beginOfCentury);\n}\nexports.getBeginOfCenturyYear = getBeginOfCenturyYear;\n/**\n * Decade\n */\n/**\n * Gets the year of the beginning of a decade of a given date.\n * @param {Date} date Date.\n * @returns {number} Year of the beginning of a decade.\n */\nfunction getBeginOfDecadeYear(date) {\n    var beginOfDecade = (0, date_utils_1.getDecadeStart)(date);\n    return (0, date_utils_1.getYear)(beginOfDecade);\n}\nexports.getBeginOfDecadeYear = getBeginOfDecadeYear;\n/**\n * Week\n */\n/**\n * Returns the beginning of a given week.\n *\n * @param {Date} date Date.\n * @param {CalendarType} [calendarType=\"iso8601\"] Calendar type.\n * @returns {Date} Beginning of a given week.\n */\nfunction getBeginOfWeek(date, calendarType) {\n    if (calendarType === void 0) { calendarType = const_js_1.CALENDAR_TYPES.ISO_8601; }\n    var year = (0, date_utils_1.getYear)(date);\n    var monthIndex = (0, date_utils_1.getMonth)(date);\n    var day = date.getDate() - getDayOfWeek(date, calendarType);\n    return new Date(year, monthIndex, day);\n}\nexports.getBeginOfWeek = getBeginOfWeek;\n/**\n * Gets week number according to ISO 8601 or US standard.\n * In ISO 8601, Arabic and Hebrew week 1 is the one with January 4.\n * In US calendar week 1 is the one with January 1.\n *\n * @param {Date} date Date.\n * @param {CalendarType} [calendarType=\"iso8601\"] Calendar type.\n * @returns {number} Week number.\n */\nfunction getWeekNumber(date, calendarType) {\n    if (calendarType === void 0) { calendarType = const_js_1.CALENDAR_TYPES.ISO_8601; }\n    var calendarTypeForWeekNumber = calendarType === const_js_1.CALENDAR_TYPES.GREGORY ? const_js_1.CALENDAR_TYPES.GREGORY : const_js_1.CALENDAR_TYPES.ISO_8601;\n    var beginOfWeek = getBeginOfWeek(date, calendarType);\n    var year = (0, date_utils_1.getYear)(date) + 1;\n    var dayInWeekOne;\n    var beginOfFirstWeek;\n    // Look for the first week one that does not come after a given date\n    do {\n        dayInWeekOne = new Date(year, 0, calendarTypeForWeekNumber === const_js_1.CALENDAR_TYPES.ISO_8601 ? 4 : 1);\n        beginOfFirstWeek = getBeginOfWeek(dayInWeekOne, calendarType);\n        year -= 1;\n    } while (date < beginOfFirstWeek);\n    return Math.round((beginOfWeek.getTime() - beginOfFirstWeek.getTime()) / (8.64e7 * 7)) + 1;\n}\nexports.getWeekNumber = getWeekNumber;\n/**\n * Others\n */\n/**\n * Returns the beginning of a given range.\n *\n * @param {RangeType} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n * @returns {Date} Beginning of a given range.\n */\nfunction getBegin(rangeType, date) {\n    switch (rangeType) {\n        case 'century':\n            return (0, date_utils_1.getCenturyStart)(date);\n        case 'decade':\n            return (0, date_utils_1.getDecadeStart)(date);\n        case 'year':\n            return (0, date_utils_1.getYearStart)(date);\n        case 'month':\n            return (0, date_utils_1.getMonthStart)(date);\n        case 'day':\n            return (0, date_utils_1.getDayStart)(date);\n        default:\n            throw new Error(\"Invalid rangeType: \".concat(rangeType));\n    }\n}\nexports.getBegin = getBegin;\n/**\n * Returns the beginning of a previous given range.\n *\n * @param {RangeType} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n * @returns {Date} Beginning of a previous given range.\n */\nfunction getBeginPrevious(rangeType, date) {\n    switch (rangeType) {\n        case 'century':\n            return (0, date_utils_1.getPreviousCenturyStart)(date);\n        case 'decade':\n            return (0, date_utils_1.getPreviousDecadeStart)(date);\n        case 'year':\n            return (0, date_utils_1.getPreviousYearStart)(date);\n        case 'month':\n            return (0, date_utils_1.getPreviousMonthStart)(date);\n        default:\n            throw new Error(\"Invalid rangeType: \".concat(rangeType));\n    }\n}\nexports.getBeginPrevious = getBeginPrevious;\n/**\n * Returns the beginning of a next given range.\n *\n * @param {RangeType} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n * @returns {Date} Beginning of a next given range.\n */\nfunction getBeginNext(rangeType, date) {\n    switch (rangeType) {\n        case 'century':\n            return (0, date_utils_1.getNextCenturyStart)(date);\n        case 'decade':\n            return (0, date_utils_1.getNextDecadeStart)(date);\n        case 'year':\n            return (0, date_utils_1.getNextYearStart)(date);\n        case 'month':\n            return (0, date_utils_1.getNextMonthStart)(date);\n        default:\n            throw new Error(\"Invalid rangeType: \".concat(rangeType));\n    }\n}\nexports.getBeginNext = getBeginNext;\nfunction getBeginPrevious2(rangeType, date) {\n    switch (rangeType) {\n        case 'decade':\n            return (0, date_utils_1.getPreviousDecadeStart)(date, -100);\n        case 'year':\n            return (0, date_utils_1.getPreviousYearStart)(date, -10);\n        case 'month':\n            return (0, date_utils_1.getPreviousMonthStart)(date, -12);\n        default:\n            throw new Error(\"Invalid rangeType: \".concat(rangeType));\n    }\n}\nexports.getBeginPrevious2 = getBeginPrevious2;\nfunction getBeginNext2(rangeType, date) {\n    switch (rangeType) {\n        case 'decade':\n            return (0, date_utils_1.getNextDecadeStart)(date, 100);\n        case 'year':\n            return (0, date_utils_1.getNextYearStart)(date, 10);\n        case 'month':\n            return (0, date_utils_1.getNextMonthStart)(date, 12);\n        default:\n            throw new Error(\"Invalid rangeType: \".concat(rangeType));\n    }\n}\nexports.getBeginNext2 = getBeginNext2;\n/**\n * Returns the end of a given range.\n *\n * @param {RangeType} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n * @returns {Date} End of a given range.\n */\nfunction getEnd(rangeType, date) {\n    switch (rangeType) {\n        case 'century':\n            return (0, date_utils_1.getCenturyEnd)(date);\n        case 'decade':\n            return (0, date_utils_1.getDecadeEnd)(date);\n        case 'year':\n            return (0, date_utils_1.getYearEnd)(date);\n        case 'month':\n            return (0, date_utils_1.getMonthEnd)(date);\n        case 'day':\n            return (0, date_utils_1.getDayEnd)(date);\n        default:\n            throw new Error(\"Invalid rangeType: \".concat(rangeType));\n    }\n}\nexports.getEnd = getEnd;\n/**\n * Returns the end of a previous given range.\n *\n * @param {RangeType} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n * @returns {Date} End of a previous given range.\n */\nfunction getEndPrevious(rangeType, date) {\n    switch (rangeType) {\n        case 'century':\n            return (0, date_utils_1.getPreviousCenturyEnd)(date);\n        case 'decade':\n            return (0, date_utils_1.getPreviousDecadeEnd)(date);\n        case 'year':\n            return (0, date_utils_1.getPreviousYearEnd)(date);\n        case 'month':\n            return (0, date_utils_1.getPreviousMonthEnd)(date);\n        default:\n            throw new Error(\"Invalid rangeType: \".concat(rangeType));\n    }\n}\nexports.getEndPrevious = getEndPrevious;\nfunction getEndPrevious2(rangeType, date) {\n    switch (rangeType) {\n        case 'decade':\n            return (0, date_utils_1.getPreviousDecadeEnd)(date, -100);\n        case 'year':\n            return (0, date_utils_1.getPreviousYearEnd)(date, -10);\n        case 'month':\n            return (0, date_utils_1.getPreviousMonthEnd)(date, -12);\n        default:\n            throw new Error(\"Invalid rangeType: \".concat(rangeType));\n    }\n}\nexports.getEndPrevious2 = getEndPrevious2;\n/**\n * Returns an array with the beginning and the end of a given range.\n *\n * @param {RangeType} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n * @returns {Date[]} Beginning and end of a given range.\n */\nfunction getRange(rangeType, date) {\n    switch (rangeType) {\n        case 'century':\n            return (0, date_utils_1.getCenturyRange)(date);\n        case 'decade':\n            return (0, date_utils_1.getDecadeRange)(date);\n        case 'year':\n            return (0, date_utils_1.getYearRange)(date);\n        case 'month':\n            return (0, date_utils_1.getMonthRange)(date);\n        case 'day':\n            return (0, date_utils_1.getDayRange)(date);\n        default:\n            throw new Error(\"Invalid rangeType: \".concat(rangeType));\n    }\n}\nexports.getRange = getRange;\n/**\n * Creates a range out of two values, ensuring they are in order and covering entire period ranges.\n *\n * @param {RangeType} rangeType Range type (e.g. 'day')\n * @param {Date} date1 First date.\n * @param {Date} date2 Second date.\n * @returns {Date[]} Beginning and end of a given range.\n */\nfunction getValueRange(rangeType, date1, date2) {\n    var rawNextValue = [date1, date2].sort(function (a, b) { return a.getTime() - b.getTime(); });\n    return [getBegin(rangeType, rawNextValue[0]), getEnd(rangeType, rawNextValue[1])];\n}\nexports.getValueRange = getValueRange;\nfunction toYearLabel(locale, formatYear, dates) {\n    if (formatYear === void 0) { formatYear = dateFormatter_js_1.formatYear; }\n    return dates.map(function (date) { return formatYear(locale, date); }).join(' – ');\n}\n/**\n * @callback FormatYear\n * @param {string} locale Locale.\n * @param {Date} date Date.\n * @returns {string} Formatted year.\n */\n/**\n * Returns a string labelling a century of a given date.\n * For example, for 2017 it will return 2001-2100.\n *\n * @param {string} locale Locale.\n * @param {FormatYear} formatYear Function to format a year.\n * @param {Date|string|number} date Date or a year as a string or as a number.\n * @returns {string} String labelling a century of a given date.\n */\nfunction getCenturyLabel(locale, formatYear, date) {\n    return toYearLabel(locale, formatYear, (0, date_utils_1.getCenturyRange)(date));\n}\nexports.getCenturyLabel = getCenturyLabel;\n/**\n * Returns a string labelling a decade of a given date.\n * For example, for 2017 it will return 2011-2020.\n *\n * @param {string} locale Locale.\n * @param {FormatYear} formatYear Function to format a year.\n * @param {Date|string|number} date Date or a year as a string or as a number.\n * @returns {string} String labelling a decade of a given date.\n */\nfunction getDecadeLabel(locale, formatYear, date) {\n    return toYearLabel(locale, formatYear, (0, date_utils_1.getDecadeRange)(date));\n}\nexports.getDecadeLabel = getDecadeLabel;\n/**\n * Returns a boolean determining whether a given date is the current day of the week.\n *\n * @param {Date} date Date.\n * @returns {boolean} Whether a given date is the current day of the week.\n */\nfunction isCurrentDayOfWeek(date) {\n    return date.getDay() === new Date().getDay();\n}\nexports.isCurrentDayOfWeek = isCurrentDayOfWeek;\n/**\n * Returns a boolean determining whether a given date is a weekend day.\n *\n * @param {Date} date Date.\n * @param {CalendarType} [calendarType=\"iso8601\"] Calendar type.\n * @returns {boolean} Whether a given date is a weekend day.\n */\nfunction isWeekend(date, calendarType) {\n    if (calendarType === void 0) { calendarType = const_js_1.CALENDAR_TYPES.ISO_8601; }\n    var weekday = date.getDay();\n    switch (calendarType) {\n        case const_js_1.CALENDAR_TYPES.ISLAMIC:\n        case const_js_1.CALENDAR_TYPES.HEBREW:\n            return weekday === FRIDAY || weekday === SATURDAY;\n        case const_js_1.CALENDAR_TYPES.ISO_8601:\n        case const_js_1.CALENDAR_TYPES.GREGORY:\n            return weekday === SATURDAY || weekday === SUNDAY;\n        default:\n            throw new Error('Unsupported calendar type.');\n    }\n}\nexports.isWeekend = isWeekend;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}